#!/bin/bash -v
apt-get update
DEBIAN_FRONTEND=noninteractive apt-get upgrade -y -o Dpkg::Options::="--force-confnew"
apt-get install -y \
  apt-transport-https \
  ca-certificates \
  build-essential \
  software-properties-common \
  unzip \
  curl \
  wget \
  gnupg \
  net-tools \
  jq \
  wireguard-dkms \
  wireguard-tools && \
  rm -rf /var/lib/apt/lists/*

curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
unzip awscliv2.zip && \
rm -f awscliv2.zip && \
./aws/install

cat > /etc/wireguard/wg0.conf <<- EOF
# Managed by Terraform
[Interface]
Address = ${wg_server_net}
PrivateKey = ${wg_server_private_key}
ListenPort = ${wg_server_port}
PostUp = sysctl -w -q net.ipv4.ip_forward=1
PostUp = iptables -P FORWARD DROP
PostUp = iptables -A FORWARD -i wg0 -j ACCEPT
PostUp = iptables -t nat -A POSTROUTING -o ENI -j MASQUERADE
PostDown = sysctl -w -q net.ipv4.ip_forward=0
PostDown = iptables -P FORWARD ACCEPT
PostDown = iptables -D FORWARD -i wg0 -j ACCEPT
PostDown = iptables -t nat -D POSTROUTING -o ENI -j MASQUERADE

${peers}
EOF

export ENI=$(ip route get 8.8.8.8 | grep 8.8.8.8 | awk '{print $5}')
sed -i "s/ENI/$ENI/g" /etc/wireguard/wg0.conf

# Use EIP if it is provided
if [ "${use_eip}" != "disabled" ]; then
  export INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
  export REGION=$(curl -fsq http://169.254.169.254/latest/meta-data/placement/availability-zone | sed 's/[a-z]$//')
  aws --region $${REGION} ec2 associate-address --allocation-id ${eip_id} --instance-id $${INSTANCE_ID}
fi

chown -R root:root /etc/wireguard/
chmod -R og-rwx /etc/wireguard/*
sysctl -p
systemctl enable wg-quick@wg0.service
systemctl start wg-quick@wg0.service

until systemctl is-active --quiet wg-quick@wg0.service
do
  sleep 1
done

sysctl -w net.ipv6.conf.all.disable_ipv6=1
sysctl -w net.ipv6.conf.default.disable_ipv6=1
sysctl -w net.ipv6.conf.lo.disable_ipv6=1

ufw allow ssh
ufw allow ${wg_server_port}/udp
ufw --force enable